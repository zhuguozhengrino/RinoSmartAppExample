{"version":3,"names":["codegenNativeComponent"],"sources":["LinearGradientNativeComponent.js"],"sourcesContent":["/**\n * @flow strict-local\n * @format\n */\n/* eslint-disable */\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native/Libraries/Components/View/ViewPropTypes';\nimport type { HostComponent } from 'react-native/Libraries/Renderer/shims/ReactNativeTypes';\nimport { ColorValue } from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type { Int32, Double } from 'react-native/Libraries/Types/CodegenTypes';\n\ntype LayoutEvent = $ReadOnly<{|\n  layout: $ReadOnly<{|\n    x: Float,\n    y: Float,\n    width: Float,\n    height: Float,\n  |}>,\n|}>;\n\ntype SvgNodeCommonProps = $ReadOnly<{|\n  name?: string,\n  opacity?: WithDefault<Float, 1.0>,\n  matrix?: $ReadOnlyArray<Float>, //CGAffineTransform,\n  // transform?: ____TransformStyle_Internal, // CATransform3D, custom handling\n  mask?: string,\n  markerStart?: string,\n  markerMid?: string,\n  markerEnd?: string,\n  clipPath?: string,\n  clipRule?: WithDefault<Int32, 0>,\n  responsible?: boolean,\n  onLayout?: ?DirectEventHandler<LayoutEvent>, // not working for now\n  display?: string,\n|}>;\n\ntype Units = 'userSpaceOnUse' | 'objectBoundingBox';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n  ...SvgNodeCommonProps,\n  x1?: string,\n  y1?: string,\n  x2?: string,\n  y2?: string,\n  gradient?: $ReadOnlyArray<Float>,\n  gradientUnits?: Int32,\n  gradientTransform?: $ReadOnlyArray<Float>, //CGAffineTransform,\n|}>;\n\ntype ComponentType = HostComponent<NativeProps>;\n\nexport default (codegenNativeComponent<NativeProps>(\n  'RNSVGLinearGradient',\n  {},\n): ComponentType);\n"],"mappings":"mKAKA,uHAGA,wE,aA4CgB,GAAAA,+BAAA,EACd,qBADc,CAEd,EAFc,C"}